August 10, 2021

The server here runs in around 22MB of RAM, based on watching the
output of free while I hit it with ab (Apache Benchmark utility).
You can find more info on back-of-the-envelop benchmarking in the
docs directory.

The server hosting the tinyjhttpd daemon was Alpine
(alpine-standard-3.14.1-x86_64) in a VirtualBox with 256MB of RAM.

This server supports mustache templates and uses the web server
that is built-in with Java.

It uses Java 9 modules, including the automatic module naming feature
that enables you to use libraries (in this case, jmustache), that
are not packaged as a module.

To build the jar, install OpenJDK 11 and type make in the project
root.  It may work with Java 9, but I didn't try that.

I used the following websites to figure out how to build this:

  * A sample web server using the com.sun.net.httpserver package
  in the jdk.httpserver module:
  https://docs.oracle.com/en/java/javase/11/docs/api/jdk.httpserver/com/sun/net/httpserver/package-summary.html

  * Very useful page on how to use Java 9 modules:
  https://hub.packtpub.com/creating-a-simple-modular-application-in-java-11-tutorial/

  * How to use non-modular libraries (aka make an "automatic module"):
  https://www.logicbig.com/tutorials/core-java-tutorial/modules/automatic-modules.html


-- Mark
